name: "Code Scan (eslint)"
on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
  schedule:
    - cron: $cron-weekly

jobs:
  analyze:
    name: Analysis
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
#      - if: matrix.build-mode == 'manual'
#        shell: bash
#        run: |
#          echo 'If you are using a "manual" build mode for one or more of the' \
#          'languages you are analyzing, replace this with the commands to build' \
#          'your code, for example:'
#          echo '  make bootstrap'
#          echo '  make release'
#          exit 1
#        - name: Perform CodeQL Analysis
#          uses: github/codeql-action/analyze@v3
#          with:
#            category: "/language:${{matrix.language}}"
#    eslint:
#      name: Run eslint scanning
#      runs-on: ubuntu-latest
#      permissions:
#        contents: read
#        security-events: write
#        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
#      steps:
#        - name: Checkout code
#          uses: actions/checkout@v4
#
#        - name: Install ESLint
#          run: |
#            npm install eslint@8.10.0
#            npm install @microsoft/eslint-formatter-sarif@2.1.7
#
#        - name: Run ESLint
#          run: npx eslint .
#            --config config/.eslintrc.js
#            --ext .js,.jsx,.ts,.tsx
#            --format @microsoft/eslint-formatter-sarif
#            --output-file eslint-results.sarif
#          continue-on-error: true
#
#        - name: Upload analysis results to GitHub
#          uses: github/codeql-action/upload-sarif@v2
#          with:
#            sarif_file: eslint-results.sarif
#            wait-for-processing: true
